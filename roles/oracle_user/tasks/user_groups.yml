---
# --------------------- Add Linux Groups

- name:                 "Add Oracle Installation Group"
  group: 
    name:               "{{ oracle_user.install_group.name }}"
    gid:                "{{ oracle_user.install_group.gid }}"
    state:              present
    system:             no

- name:                 "Create ASM Linux Groups"
  group: 
    name:               "{{ item.value.name }}"
    gid:                "{{ item.value.gid }}"
    state:              present
    system:             no
  with_dict:            "{{ oracle_user.asm_groups }}"

- name:                 "Create Database Linux Groups"
  group: 
    name:               "{{ item.value.name }}"
    gid:                "{{ item.value.gid }}"
    state:              present
    system:             no
  with_dict:            "{{ oracle_user.db_groups }}"

# --------------------- Create Oracle User

- name:                 "Load Oracle User Password"
  include_vars:
    file:               oracle_pw.yml
    name:               oracle_user_pw

- set_fact:
    oracle_groups:      "{{ lookup('flattened', oracle_user | json_query('*.*.name')) }}"

- debug:
    var:                oracle_groups
    verbosity:          1

- name:                 "Set default group and password for Oracle user"
  user:
    name:               oracle
    comment:            "Oracle software owner"
    password:           "{{ oracle_user_pw.password }}"
    group:              "{{ oracle_user.install_group.name }}"
    groups:             "{{ oracle_user.install_group.name }},{{ oracle_groups }}"
    
# --------------------- Generate SSH keys on first node only 

- name:                 "Generate and copy SSH keys for first node only"
  block:
  
  - name:               "Generate SSH keys for first node only"
    user:
      name:             oracle
      generate_ssh_key: yes

  - name:               "Retrieve SSH Public Key from first node only"
    fetch:
      src:              /home/oracle/.ssh/id_rsa.pub
      dest:             /etc/ansible/keys/redfern/
      flat:             yes

  - name:               "Retrieve SSH Private Key from first node only"
    fetch:
      src:              /home/oracle/.ssh/id_rsa
      dest:             /etc/ansible/keys/redfern/
      flat:             yes

  when:                 first_node

# --------------------- Add public key to authorized keys

- name:                 "Add public key to authorized keys"
  authorized_key:
    user:               oracle
    state:              present
    key:                "{{ lookup('file', '/etc/ansible/keys/redfern/id_rsa.pub') }}"

# --------------------- Add current host to known hosts

- name:                 "Add current host to known hosts"
  expect:
    command:            /bin/ssh-copy-id "{{ item }}" -f
    responses:
      'Are you sure you want to continue connecting \(yes/no\)\? ': 'yes'
  loop:                 "{{ groups['oracle_rac'] }}"
  become:               yes
  become_user:          oracle
...
